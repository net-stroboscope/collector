@@grammar :: Stroboscope
@@parseinfo :: True
@@comments :: /\(\*.*?\*\)/
@@eol_comments :: /#.*?$/

# Prevent node IDs from using reserved words
@@keyword :: MIRROR CONFINE ON USING DURING EVERY

# lower-case rules will eat any white space ahead of them
# upper-case rules won't

start        = requirements $;

requirements = queries:{ query }+ budget:{ budget_item }* ;

query        = properties:[ query_properties ] action:keyword_name prefixes:prefixes 'ON' regions:regions ;

budget_item   = key:keyword_name val:value ;

query_properties = '(' ~ ','.{ @:query_prop }+ ')' ;
query_prop    = key:qprop_name ':' val:qprop_val ;
qprop_name    = /[a-zA-Z_0-9]+/ ;
qprop_val     = /[a-zA-Z0-9_\.]+/;

prefixes     = ','.{ prefix }+ ;
prefix       =  /[.:a-fA-F0-9]*(\/[0-9]*)?/ ;

regions      = ','.{ region }+ ;
region       = '[' @:nodes ']' ;
nodes        = { node }+ ;
node         =
             | ARROW
             | ID
             ;
value        = amount:float unit:[ unit_name ] ;

keyword_name = /[A-Z]+/ ;

@name
unit_name    = /[a-zA-Z]+/ ;

float        =
             | /[0-9]+(\.[0-9]*)?/
             | /[0-9]*\.[0-9]+/
             ;

@name
ID           = /[a-zA-Z_][a-zA-Z0-9_]*/ ;
ARROW        = '->' ;
